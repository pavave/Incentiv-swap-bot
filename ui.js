const readline = require("readline");
const { swapTokens } = require("./swap");
const { sendToken } = require("./send");

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

console.log("üîß –í–∏–±–µ—Ä–∏ –¥—ñ—é:");
console.log("1. SMPL ‚Üí WCENT");
console.log("2. FLIP ‚Üí WCENT");
console.log("3. BULL ‚Üí WCENT");
console.log("4. WCENT ‚Üí SMPL");
console.log("5. WCENT ‚Üí FLIP");
console.log("6. WCENT ‚Üí BULL");
console.log("7. –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ç–æ–∫–µ–Ω");
console.log("8. –°—Ç–æ–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó");

rl.question("üëâ –í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –¥—ñ—ó: ", async (choice) => {
  const swapMap = {
    "1": ["SMPL", "WCENT"],
    "2": ["FLIP", "WCENT"],
    "3": ["BULL", "WCENT"],
    "4": ["WCENT", "SMPL"],
    "5": ["WCENT", "FLIP"],
    "6": ["WCENT", "BULL"]
  };

  if (["1", "2", "3", "4", "5", "6"].includes(choice)) {
    rl.question("üí∞ –í–≤–µ–¥–∏ —Å—É–º—É –¥–ª—è —Å–≤–∞–ø—É: ", async (amount) => {
      const [from, to] = swapMap[choice];
      await swapTokens(from, to, amount);
      rl.close();
    });
  } else if (choice === "7") {
    rl.question("üî§ –¢–æ–∫–µ–Ω (SMPL, FLIP, BULL, WCENT): ", (token) => {
      rl.question("üí∞ –°—É–º–∞: ", async (amount) => {
        await sendToken(token, amount);
        rl.close();
      });
    });
  } else if (choice === "8") {
    require("fs").writeFileSync("stop.flag", "STOP");
    console.log("üõë –°—Ç–æ–ø-—Ñ–∞–π–ª —Å—Ç–≤–æ—Ä–µ–Ω–æ.");
    rl.close();
  } else {
    console.log("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä.");
    rl.close();
  }
});
